/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DummyUSDT, DummyUSDTInterface } from "../../contracts/DummyUSDT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280600981526020017f44756d6d795553445400000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f6455534454000000000000000000000000000000000000000000000000000000815250816003908162000090919062000778565b508060049081620000a2919062000778565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001119190620008a4565b60405180910390fd5b6200012b816200017260201b60201c565b506200016c33620001416200023860201b60201c565b600a6200014f919062000a51565b6305f5e10062000160919062000aa2565b6200024160201b60201c565b62000b93565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006008905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002b65760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002ad9190620008a4565b60405180910390fd5b620002ca60008383620002ce60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200032457806002600082825462000317919062000aed565b92505081905550620003fa565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620003b3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003aa9392919062000b39565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000445578060026000828254039250508190555062000492565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004f1919062000b76565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200058057607f821691505b60208210810362000596576200059562000538565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005c1565b6200060c8683620005c1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000659620006536200064d8462000624565b6200062e565b62000624565b9050919050565b6000819050919050565b620006758362000638565b6200068d620006848262000660565b848454620005ce565b825550505050565b600090565b620006a462000695565b620006b18184846200066a565b505050565b5b81811015620006d957620006cd6000826200069a565b600181019050620006b7565b5050565b601f8211156200072857620006f2816200059c565b620006fd84620005b1565b810160208510156200070d578190505b620007256200071c85620005b1565b830182620006b6565b50505b505050565b600082821c905092915050565b60006200074d600019846008026200072d565b1980831691505092915050565b60006200076883836200073a565b9150826002028217905092915050565b6200078382620004fe565b67ffffffffffffffff8111156200079f576200079e62000509565b5b620007ab825462000567565b620007b8828285620006dd565b600060209050601f831160018114620007f05760008415620007db578287015190505b620007e785826200075a565b86555062000857565b601f19841662000800866200059c565b60005b828110156200082a5784890151825560018201915060208501945060208101905062000803565b868310156200084a578489015162000846601f8916826200073a565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200088c826200085f565b9050919050565b6200089e816200087f565b82525050565b6000602082019050620008bb600083018462000893565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200094f57808604811115620009275762000926620008c1565b5b6001851615620009375780820291505b80810290506200094785620008f0565b945062000907565b94509492505050565b6000826200096a576001905062000a3d565b816200097a576000905062000a3d565b81600181146200099357600281146200099e57620009d4565b600191505062000a3d565b60ff841115620009b357620009b2620008c1565b5b8360020a915084821115620009cd57620009cc620008c1565b5b5062000a3d565b5060208310610133831016604e8410600b841016171562000a0e5782820a90508381111562000a085762000a07620008c1565b5b62000a3d565b62000a1d8484846001620008fd565b9250905081840481111562000a375762000a36620008c1565b5b81810290505b9392505050565b600060ff82169050919050565b600062000a5e8262000624565b915062000a6b8362000a44565b925062000a9a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000958565b905092915050565b600062000aaf8262000624565b915062000abc8362000624565b925082820262000acc8162000624565b9150828204841483151762000ae65762000ae5620008c1565b5b5092915050565b600062000afa8262000624565b915062000b078362000624565b925082820190508082111562000b225762000b21620008c1565b5b92915050565b62000b338162000624565b82525050565b600060608201905062000b50600083018662000893565b62000b5f602083018562000b28565b62000b6e604083018462000b28565b949350505050565b600060208201905062000b8d600083018462000b28565b92915050565b6113708062000ba36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063a9059cbb11610066578063a9059cbb14610204578063b86d1d6314610234578063dd62ed3e14610250578063f2fde38b14610280576100cf565b8063715018a6146101be5780638da5cb5b146101c857806395d89b41146101e6576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806370a082311461018e575b600080fd5b6100dc61029c565b6040516100e99190610e04565b60405180910390f35b61010c60048036038101906101079190610ebf565b61032e565b6040516101199190610f1a565b60405180910390f35b61012a610351565b6040516101379190610f44565b60405180910390f35b61015a60048036038101906101559190610f5f565b61035b565b6040516101679190610f1a565b60405180910390f35b61017861038a565b6040516101859190610fce565b60405180910390f35b6101a860048036038101906101a39190610fe9565b610393565b6040516101b59190610f44565b60405180910390f35b6101c66103db565b005b6101d06103ef565b6040516101dd9190611025565b60405180910390f35b6101ee610419565b6040516101fb9190610e04565b60405180910390f35b61021e60048036038101906102199190610ebf565b6104ab565b60405161022b9190610f1a565b60405180910390f35b61024e60048036038101906102499190610fe9565b6104ce565b005b61026a60048036038101906102659190611040565b6104fa565b6040516102779190610f44565b60405180910390f35b61029a60048036038101906102959190610fe9565b610581565b005b6060600380546102ab906110af565b80601f01602080910402602001604051908101604052809291908181526020018280546102d7906110af565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b600080610339610607565b905061034681858561060f565b600191505092915050565b6000600254905090565b600080610366610607565b9050610373858285610621565b61037e8585856106b5565b60019150509392505050565b60006008905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6103e36107a9565b6103ed6000610830565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610428906110af565b80601f0160208091040260200160405190810160405280929190818152602001828054610454906110af565b80156104a15780601f10610476576101008083540402835291602001916104a1565b820191906000526020600020905b81548152906001019060200180831161048457829003601f168201915b5050505050905090565b6000806104b6610607565b90506104c38185856106b5565b600191505092915050565b6104f7816104da61038a565b600a6104e69190611242565b60c86104f2919061128d565b6108f6565b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6105896107a9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105fb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105f29190611025565b60405180910390fd5b61060481610830565b50565b600033905090565b61061c8383836001610978565b505050565b600061062d84846104fa565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106af578181101561069f578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610696939291906112cf565b60405180910390fd5b6106ae84848484036000610978565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107275760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161071e9190611025565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107995760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107909190611025565b60405180910390fd5b6107a4838383610b4f565b505050565b6107b1610607565b73ffffffffffffffffffffffffffffffffffffffff166107cf6103ef565b73ffffffffffffffffffffffffffffffffffffffff161461082e576107f2610607565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108259190611025565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109685760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161095f9190611025565b60405180910390fd5b61097460008383610b4f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109ea5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109e19190611025565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a5c5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a539190611025565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610b49578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b409190610f44565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ba1578060026000828254610b959190611306565b92505081905550610c74565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c2d578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c24939291906112cf565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cbd5780600260008282540392505081905550610d0a565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d679190610f44565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dae578082015181840152602081019050610d93565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dd682610d74565b610de08185610d7f565b9350610df0818560208601610d90565b610df981610dba565b840191505092915050565b60006020820190508181036000830152610e1e8184610dcb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5682610e2b565b9050919050565b610e6681610e4b565b8114610e7157600080fd5b50565b600081359050610e8381610e5d565b92915050565b6000819050919050565b610e9c81610e89565b8114610ea757600080fd5b50565b600081359050610eb981610e93565b92915050565b60008060408385031215610ed657610ed5610e26565b5b6000610ee485828601610e74565b9250506020610ef585828601610eaa565b9150509250929050565b60008115159050919050565b610f1481610eff565b82525050565b6000602082019050610f2f6000830184610f0b565b92915050565b610f3e81610e89565b82525050565b6000602082019050610f596000830184610f35565b92915050565b600080600060608486031215610f7857610f77610e26565b5b6000610f8686828701610e74565b9350506020610f9786828701610e74565b9250506040610fa886828701610eaa565b9150509250925092565b600060ff82169050919050565b610fc881610fb2565b82525050565b6000602082019050610fe36000830184610fbf565b92915050565b600060208284031215610fff57610ffe610e26565b5b600061100d84828501610e74565b91505092915050565b61101f81610e4b565b82525050565b600060208201905061103a6000830184611016565b92915050565b6000806040838503121561105757611056610e26565b5b600061106585828601610e74565b925050602061107685828601610e74565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110c757607f821691505b6020821081036110da576110d9611080565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561116657808604811115611142576111416110e0565b5b60018516156111515780820291505b808102905061115f8561110f565b9450611126565b94509492505050565b60008261117f576001905061123b565b8161118d576000905061123b565b81600181146111a357600281146111ad576111dc565b600191505061123b565b60ff8411156111bf576111be6110e0565b5b8360020a9150848211156111d6576111d56110e0565b5b5061123b565b5060208310610133831016604e8410600b84101617156112115782820a90508381111561120c5761120b6110e0565b5b61123b565b61121e848484600161111c565b92509050818404811115611235576112346110e0565b5b81810290505b9392505050565b600061124d82610e89565b915061125883610fb2565b92506112857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461116f565b905092915050565b600061129882610e89565b91506112a383610e89565b92508282026112b181610e89565b915082820484148315176112c8576112c76110e0565b5b5092915050565b60006060820190506112e46000830186611016565b6112f16020830185610f35565b6112fe6040830184610f35565b949350505050565b600061131182610e89565b915061131c83610e89565b9250828201905080821115611334576113336110e0565b5b9291505056fea26469706673582212201543561a286f7e7270c18cf5d6de32872390fb127fb743c1a17368fffb42f75864736f6c63430008140033";

type DummyUSDTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyUSDTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyUSDT__factory extends ContractFactory {
  constructor(...args: DummyUSDTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DummyUSDT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DummyUSDT__factory {
    return super.connect(runner) as DummyUSDT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyUSDTInterface {
    return new Interface(_abi) as DummyUSDTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DummyUSDT {
    return new Contract(address, _abi, runner) as unknown as DummyUSDT;
  }
}
