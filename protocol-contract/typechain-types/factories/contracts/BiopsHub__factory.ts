/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { BiopsHub, BiopsHubInterface } from "../../contracts/BiopsHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pyth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Types.Direction",
        name: "direction",
        type: "uint8",
      },
    ],
    name: "TradeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Types.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "UpdateStatusTrade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_market",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_priceId",
        type: "bytes32",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "changeVdummyUSDTPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTradeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "getUserFullInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isExist",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "tradeId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum Types.Direction",
            name: "direction",
            type: "uint8",
          },
          {
            internalType: "int64",
            name: "startPrice",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "markPrice",
            type: "int64",
          },
          {
            internalType: "enum Types.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expireTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "market",
            type: "string",
          },
        ],
        internalType: "struct Types.Trade[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_market",
        type: "string",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_priceUpdateData",
        type: "bytes[]",
      },
    ],
    name: "resolveTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_direction",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_market",
        type: "string",
      },
      {
        internalType: "bytes[]",
        name: "_priceUpdateData",
        type: "bytes[]",
      },
    ],
    name: "trade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tradeTracker",
    outputs: [
      {
        internalType: "bool",
        name: "isExist",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum Types.Direction",
        name: "direction",
        type: "uint8",
      },
      {
        internalType: "int64",
        name: "startPrice",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "markPrice",
        type: "int64",
      },
      {
        internalType: "enum Types.Status",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expireTime",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "market",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTradeTracker",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405261012c600760006101000a81548163ffffffff021916908363ffffffff1602179055503480156200003457600080fd5b50604051620031863803806200318683398181016040528101906200005a919062000197565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001de565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015f8262000132565b9050919050565b620001718162000152565b81146200017d57600080fd5b50565b600081519050620001918162000166565b92915050565b60008060408385031215620001b157620001b06200012d565b5b6000620001c18582860162000180565b9250506020620001d48582860162000180565b9150509250929050565b612f9880620001ee6000396000f3fe6080604052600436106100a75760003560e01c80638c8a8aa2116100645780638c8a8aa2146101cf5780638da5cb5b1461020c5780639cf45394146102375780639f7f651314610260578063efbda66114610289578063fd7e0940146102c6576100a7565b806306e3de85146100ac578063234c615d146100e95780632ad0a383146101195780632db957e814610144578063379607f51461018a57806384296797146101b3575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611c31565b6102ef565b6040516100e09190611c80565b60405180910390f35b61010360048036038101906100fe9190611e7a565b610320565b6040516101109190611c80565b60405180910390f35b34801561012557600080fd5b5061012e6108f5565b60405161013b9190611c80565b60405180910390f35b34801561015057600080fd5b5061016b60048036038101906101669190611f45565b6109d3565b6040516101819a999897969594939291906120f6565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac9190611f45565b610b10565b005b6101cd60048036038101906101c89190612199565b610dc5565b005b3480156101db57600080fd5b506101f660048036038101906101f191906121f9565b611368565b6040516102039190612466565b60405180910390f35b34801561021857600080fd5b506102216116d7565b60405161022e9190612488565b60405180910390f35b34801561024357600080fd5b5061025e600480360381019061025991906124a3565b6116fd565b005b34801561026c57600080fd5b50610287600480360381019061028291906121f9565b61177c565b005b34801561029557600080fd5b506102b060048036038101906102ab91906124a3565b61181a565b6040516102bd9190612505565b60405180910390f35b3480156102d257600080fd5b506102ed60048036038101906102e8919061254c565b611848565b005b6005602052816000526040600020818154811061030b57600080fd5b90600052602060002001600091509150505481565b600061032a6118c9565b86600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b81526004016103869190612488565b602060405180830381865afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c791906125bd565b10156103d257600080fd5b600760009054906101000a900463ffffffff1663ffffffff168510156103f757600080fd5b60018660ff16111561040857600080fd5b60006104126108f5565b90508088111561042157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8a308b6040518463ffffffff1660e01b8152600401610480939291906125ea565b6020604051808303816000875af115801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c3919061264d565b506104ce848461190f565b6000600a866040516104e091906126b6565b90815260200160405180910390205490506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166331d98b3f836040518263ffffffff1660e01b815260040161054e9190612505565b608060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f91906127ef565b9050600560008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600654908060018154018082558091505060019003906000526020600020016000909190919091505560405180610140016040528060011515815260200160065481526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a60ff16600181111561064e5761064d611f9c565b5b60018111156106605761065f611f9c565b5b8152602001826000015160070b8152602001600060070b8152602001600060038111156106905761068f611f9c565b5b60038111156106a2576106a1611f9c565b5b815260200189426106b3919061284b565b81526020018881525060046000600654815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff0219169083600181111561077757610776611f9c565b5b021790555060a08201518160040160016101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555060c08201518160040160096101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555060e08201518160040160116101000a81548160ff0219169083600381111561080b5761080a611f9c565b5b021790555061010082015181600501556101208201518160060190816108319190612a8b565b5090505060028a6108429190612b5d565b60086000828254610853919061284b565b925050819055508a73ffffffffffffffffffffffffffffffffffffffff166006547f432e48d1692f899901ed53f480074130cf2c779f58c3520bcd00ad7a75413db68c8c60ff1660018111156108ac576108ab611f9c565b5b6040516108ba929190612b9f565b60405180910390a3600660008154809291906108d590612bc8565b919050555060065493505050506108ea611a46565b979650505050505050565b60006002600854600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016109799190612488565b602060405180830381865afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba91906125bd565b6109c49190612c10565b6109ce9190612c73565b905090565b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460070b908060040160099054906101000a900460070b908060040160119054906101000a900460ff1690806005015490806006018054610a8d906128ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab9906128ae565b8015610b065780601f10610adb57610100808354040283529160200191610b06565b820191906000526020600020905b815481529060010190602001808311610ae957829003601f168201915b505050505090508a565b610b186118c9565b806004600082815260200190815260200160002060000160009054906101000a900460ff16610b4657600080fd5b60026003811115610b5a57610b59611f9c565b5b6004600084815260200190815260200160002060040160119054906101000a900460ff166003811115610b9057610b8f611f9c565b5b14610b9a57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636f91f85060026004600086815260200190815260200160002060030154610bfb9190612b5d565b6004600086815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401610c4f929190612ca4565b600060405180830381600087803b158015610c6957600080fd5b505af1158015610c7d573d6000803e3d6000fd5b5050505060026004600084815260200190815260200160002060030154610ca49190612b5d565b600854610cb19190612c10565b600881905550600380811115610cca57610cc9611f9c565b5b6004600084815260200190815260200160002060040160116101000a81548160ff02191690836003811115610d0257610d01611f9c565b5b0217905550610d12826003611a50565b6004600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed02660026004600087815260200190815260200160002060030154610da49190612b5d565b604051610db19190611c80565b60405180910390a350610dc2611a46565b50565b610dcd6118c9565b826004600082815260200190815260200160002060000160009054906101000a900460ff16610dfb57600080fd5b60006003811115610e0f57610e0e611f9c565b5b6004600086815260200190815260200160002060040160119054906101000a900460ff166003811115610e4557610e44611f9c565b5b148015610e68575060046000858152602001908152602001600020600501544210155b610e7157600080fd5b610e7b838361190f565b6000600a60046000878152602001908152602001600020600601604051610ea29190612d50565b90815260200160405180910390205490506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166331d98b3f836040518263ffffffff1660e01b8152600401610f109190612505565b608060405180830381865afa158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5191906127ef565b905080600001516004600088815260200190815260200160002060040160096101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555060006001811115610fab57610faa611f9c565b5b6004600088815260200190815260200160002060040160009054906101000a900460ff166001811115610fe157610fe0611f9c565b5b036111a1576004600087815260200190815260200160002060040160019054906101000a900460070b60070b816000015160070b131561102b57611026866002611a50565b61119c565b6001600381111561103f5761103e611f9c565b5b6004600088815260200190815260200160002060040160116101000a81548160ff0219169083600381111561107757611076611f9c565b5b0217905550611087866001611a50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008a8152602001908152602001600020600301546040518363ffffffff1660e01b815260040161111c929190612d67565b6020604051808303816000875af115801561113b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f919061264d565b50600260046000888152602001908152602001600020600301546111839190612b5d565b600860008282546111949190612c10565b925050819055505b611358565b6004600087815260200190815260200160002060040160019054906101000a900460070b60070b816000015160070b12156111e6576111e1866002611a50565b611357565b600160038111156111fa576111f9611f9c565b5b6004600088815260200190815260200160002060040160116101000a81548160ff0219169083600381111561123257611231611f9c565b5b0217905550611242866001611a50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008a8152602001908152602001600020600301546040518363ffffffff1660e01b81526004016112d7929190612d67565b6020604051808303816000875af11580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a919061264d565b506002600460008881526020019081526020016000206003015461133e9190612b5d565b6008600082825461134f9190612c10565b925050819055505b5b505050611363611a46565b505050565b60606000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905067ffffffffffffffff8111156113c8576113c7611cef565b5b60405190808252806020026020018201604052801561140157816020015b6113ee611af4565b8152602001906001900390816113e65790505b50905060005b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156116cd5760046000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106114a6576114a5612d90565b5b90600052602060002001548152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff16600181111561157557611574611f9c565b5b600181111561158757611586611f9c565b5b81526020016004820160019054906101000a900460070b60070b60070b81526020016004820160099054906101000a900460070b60070b60070b81526020016004820160119054906101000a900460ff1660038111156115ea576115e9611f9c565b5b60038111156115fc576115fb611f9c565b5b81526020016005820154815260200160068201805461161a906128ae565b80601f0160208091040260200160405190810160405280929190818152602001828054611646906128ae565b80156116935780601f1061166857610100808354040283529160200191611693565b820191906000526020600020905b81548152906001019060200180831161167657829003601f168201915b5050505050815250508282815181106116af576116ae612d90565b5b602002602001018190525080806116c590612bc8565b915050611407565b5080915050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461175757600080fd5b600a8160405161176791906126b6565b90815260200160405180910390206000905550565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117d657600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118a257600080fd5b80600a836040516118b391906126b6565b9081526020016040518091039020819055505050565b600260005403611905576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d47eed4584846040518363ffffffff1660e01b815260040161196e929190612f23565b602060405180830381865afa15801561198b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119af91906125bd565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef9e5e288285856040518463ffffffff1660e01b8152600401611a0f929190612f23565b6000604051808303818588803b158015611a2857600080fd5b505af1158015611a3c573d6000803e3d6000fd5b5050505050505050565b6001600081905550565b8060ff166003811115611a6657611a65611f9c565b5b6004600084815260200190815260200160002060040160116101000a81548160ff02191690836003811115611a9e57611a9d611f9c565b5b0217905550817f6c6e8659bf6f6891492500fd2036853476c6268915133fbe0e17ead05b9f98ba8260ff166003811115611adb57611ada611f9c565b5b604051611ae89190612f47565b60405180910390a25050565b60405180610140016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160006001811115611b4857611b47611f9c565b5b8152602001600060070b8152602001600060070b815260200160006003811115611b7557611b74611f9c565b5b815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bc882611b9d565b9050919050565b611bd881611bbd565b8114611be357600080fd5b50565b600081359050611bf581611bcf565b92915050565b6000819050919050565b611c0e81611bfb565b8114611c1957600080fd5b50565b600081359050611c2b81611c05565b92915050565b60008060408385031215611c4857611c47611b93565b5b6000611c5685828601611be6565b9250506020611c6785828601611c1c565b9150509250929050565b611c7a81611bfb565b82525050565b6000602082019050611c956000830184611c71565b92915050565b600060ff82169050919050565b611cb181611c9b565b8114611cbc57600080fd5b50565b600081359050611cce81611ca8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d2782611cde565b810181811067ffffffffffffffff82111715611d4657611d45611cef565b5b80604052505050565b6000611d59611b89565b9050611d658282611d1e565b919050565b600067ffffffffffffffff821115611d8557611d84611cef565b5b611d8e82611cde565b9050602081019050919050565b82818337600083830152505050565b6000611dbd611db884611d6a565b611d4f565b905082815260208101848484011115611dd957611dd8611cd9565b5b611de4848285611d9b565b509392505050565b600082601f830112611e0157611e00611cd4565b5b8135611e11848260208601611daa565b91505092915050565b600080fd5b600080fd5b60008083601f840112611e3a57611e39611cd4565b5b8235905067ffffffffffffffff811115611e5757611e56611e1a565b5b602083019150836020820283011115611e7357611e72611e1f565b5b9250929050565b600080600080600080600060c0888a031215611e9957611e98611b93565b5b6000611ea78a828b01611be6565b9750506020611eb88a828b01611c1c565b9650506040611ec98a828b01611cbf565b9550506060611eda8a828b01611c1c565b945050608088013567ffffffffffffffff811115611efb57611efa611b98565b5b611f078a828b01611dec565b93505060a088013567ffffffffffffffff811115611f2857611f27611b98565b5b611f348a828b01611e24565b925092505092959891949750929550565b600060208284031215611f5b57611f5a611b93565b5b6000611f6984828501611c1c565b91505092915050565b60008115159050919050565b611f8781611f72565b82525050565b611f9681611bbd565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611fdc57611fdb611f9c565b5b50565b6000819050611fed82611fcb565b919050565b6000611ffd82611fdf565b9050919050565b61200d81611ff2565b82525050565b60008160070b9050919050565b61202981612013565b82525050565b600481106120405761203f611f9c565b5b50565b60008190506120518261202f565b919050565b600061206182612043565b9050919050565b61207181612056565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156120b1578082015181840152602081019050612096565b60008484015250505050565b60006120c882612077565b6120d28185612082565b93506120e2818560208601612093565b6120eb81611cde565b840191505092915050565b60006101408201905061210c600083018d611f7e565b612119602083018c611c71565b612126604083018b611f8d565b612133606083018a611c71565b6121406080830189612004565b61214d60a0830188612020565b61215a60c0830187612020565b61216760e0830186612068565b612175610100830185611c71565b81810361012083015261218881846120bd565b90509b9a5050505050505050505050565b6000806000604084860312156121b2576121b1611b93565b5b60006121c086828701611c1c565b935050602084013567ffffffffffffffff8111156121e1576121e0611b98565b5b6121ed86828701611e24565b92509250509250925092565b60006020828403121561220f5761220e611b93565b5b600061221d84828501611be6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61225b81611f72565b82525050565b61226a81611bfb565b82525050565b61227981611bbd565b82525050565b61228881611ff2565b82525050565b61229781612013565b82525050565b6122a681612056565b82525050565b600082825260208201905092915050565b60006122c882612077565b6122d281856122ac565b93506122e2818560208601612093565b6122eb81611cde565b840191505092915050565b60006101408301600083015161230f6000860182612252565b5060208301516123226020860182612261565b5060408301516123356040860182612270565b5060608301516123486060860182612261565b50608083015161235b608086018261227f565b5060a083015161236e60a086018261228e565b5060c083015161238160c086018261228e565b5060e083015161239460e086018261229d565b506101008301516123a9610100860182612261565b506101208301518482036101208601526123c382826122bd565b9150508091505092915050565b60006123dc83836122f6565b905092915050565b6000602082019050919050565b60006123fc82612226565b6124068185612231565b93508360208202850161241885612242565b8060005b85811015612454578484038952815161243585826123d0565b9450612440836123e4565b925060208a0199505060018101905061241c565b50829750879550505050505092915050565b6000602082019050818103600083015261248081846123f1565b905092915050565b600060208201905061249d6000830184611f8d565b92915050565b6000602082840312156124b9576124b8611b93565b5b600082013567ffffffffffffffff8111156124d7576124d6611b98565b5b6124e384828501611dec565b91505092915050565b6000819050919050565b6124ff816124ec565b82525050565b600060208201905061251a60008301846124f6565b92915050565b612529816124ec565b811461253457600080fd5b50565b60008135905061254681612520565b92915050565b6000806040838503121561256357612562611b93565b5b600083013567ffffffffffffffff81111561258157612580611b98565b5b61258d85828601611dec565b925050602061259e85828601612537565b9150509250929050565b6000815190506125b781611c05565b92915050565b6000602082840312156125d3576125d2611b93565b5b60006125e1848285016125a8565b91505092915050565b60006060820190506125ff6000830186611f8d565b61260c6020830185611f8d565b6126196040830184611c71565b949350505050565b61262a81611f72565b811461263557600080fd5b50565b60008151905061264781612621565b92915050565b60006020828403121561266357612662611b93565b5b600061267184828501612638565b91505092915050565b600081905092915050565b600061269082612077565b61269a818561267a565b93506126aa818560208601612093565b80840191505092915050565b60006126c28284612685565b915081905092915050565b600080fd5b6126db81612013565b81146126e657600080fd5b50565b6000815190506126f8816126d2565b92915050565b600067ffffffffffffffff82169050919050565b61271b816126fe565b811461272657600080fd5b50565b60008151905061273881612712565b92915050565b60008160030b9050919050565b6127548161273e565b811461275f57600080fd5b50565b6000815190506127718161274b565b92915050565b60006080828403121561278d5761278c6126cd565b5b6127976080611d4f565b905060006127a7848285016126e9565b60008301525060206127bb84828501612729565b60208301525060406127cf84828501612762565b60408301525060606127e3848285016125a8565b60608301525092915050565b60006080828403121561280557612804611b93565b5b600061281384828501612777565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061285682611bfb565b915061286183611bfb565b92508282019050808211156128795761287861281c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806128c657607f821691505b6020821081036128d9576128d861287f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026129417fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612904565b61294b8683612904565b95508019841693508086168417925050509392505050565b6000819050919050565b600061298861298361297e84611bfb565b612963565b611bfb565b9050919050565b6000819050919050565b6129a28361296d565b6129b66129ae8261298f565b848454612911565b825550505050565b600090565b6129cb6129be565b6129d6818484612999565b505050565b5b818110156129fa576129ef6000826129c3565b6001810190506129dc565b5050565b601f821115612a3f57612a10816128df565b612a19846128f4565b81016020851015612a28578190505b612a3c612a34856128f4565b8301826129db565b50505b505050565b600082821c905092915050565b6000612a6260001984600802612a44565b1980831691505092915050565b6000612a7b8383612a51565b9150826002028217905092915050565b612a9482612077565b67ffffffffffffffff811115612aad57612aac611cef565b5b612ab782546128ae565b612ac28282856129fe565b600060209050601f831160018114612af55760008415612ae3578287015190505b612aed8582612a6f565b865550612b55565b601f198416612b03866128df565b60005b82811015612b2b57848901518255600182019150602085019450602081019050612b06565b86831015612b485784890151612b44601f891682612a51565b8355505b6001600288020188555050505b505050505050565b6000612b6882611bfb565b9150612b7383611bfb565b9250828202612b8181611bfb565b91508282048414831517612b9857612b9761281c565b5b5092915050565b6000604082019050612bb46000830185611c71565b612bc16020830184612004565b9392505050565b6000612bd382611bfb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c0557612c0461281c565b5b600182019050919050565b6000612c1b82611bfb565b9150612c2683611bfb565b9250828203905081811115612c3e57612c3d61281c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612c7e82611bfb565b9150612c8983611bfb565b925082612c9957612c98612c44565b5b828204905092915050565b6000604082019050612cb96000830185611c71565b612cc66020830184611f8d565b9392505050565b60008154612cda816128ae565b612ce4818661267a565b94506001821660008114612cff5760018114612d1457612d47565b60ff1983168652811515820286019350612d47565b612d1d856128df565b60005b83811015612d3f57815481890152600182019150602081019050612d20565b838801955050505b50505092915050565b6000612d5c8284612ccd565b915081905092915050565b6000604082019050612d7c6000830185611f8d565b612d896020830184611c71565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b6000819050919050565b600082825260208201905092915050565b6000612df78385612dda565b9350612e04838584611d9b565b612e0d83611cde565b840190509392505050565b6000612e25848484612deb565b90509392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612e5a57612e59612e38565b5b83810192508235915060208301925067ffffffffffffffff821115612e8257612e81612e2e565b5b600182023603831315612e9857612e97612e33565b5b509250929050565b6000602082019050919050565b6000612eb98385612dbf565b935083602084028501612ecb84612dd0565b8060005b87811015612f11578484038952612ee68284612e3d565b612ef1868284612e18565b9550612efc84612ea0565b935060208b019a505050600181019050612ecf565b50829750879450505050509392505050565b60006020820190508181036000830152612f3e818486612ead565b90509392505050565b6000602082019050612f5c6000830184612068565b9291505056fea264697066735822122005b2902e390d47f8e57aaceeb01c12bc1dce0e38c4645f15d3c416c1c450f03864736f6c63430008140033";

type BiopsHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BiopsHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BiopsHub__factory extends ContractFactory {
  constructor(...args: BiopsHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _pyth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, _pyth, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    _pyth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, _pyth, overrides || {}) as Promise<
      BiopsHub & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BiopsHub__factory {
    return super.connect(runner) as BiopsHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BiopsHubInterface {
    return new Interface(_abi) as BiopsHubInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BiopsHub {
    return new Contract(address, _abi, runner) as unknown as BiopsHub;
  }
}
