/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { BiopsHub, BiopsHubInterface } from "../../contracts/BiopsHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pyth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Types.Direction",
        name: "direction",
        type: "uint8",
      },
    ],
    name: "TradeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum Types.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "UpdateStatusTrade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_market",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_priceId",
        type: "bytes32",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "changeVdummyUSDTPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTradeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
    ],
    name: "getUserFullInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isExist",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "tradeId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum Types.Direction",
            name: "direction",
            type: "uint8",
          },
          {
            internalType: "int64",
            name: "startPrice",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "markPrice",
            type: "int64",
          },
          {
            internalType: "enum Types.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "expireTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "market",
            type: "string",
          },
        ],
        internalType: "struct Types.Trade[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_market",
        type: "string",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_priceUpdateData",
        type: "bytes[]",
      },
    ],
    name: "resolveTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_direction",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_market",
        type: "string",
      },
      {
        internalType: "bytes[]",
        name: "_priceUpdateData",
        type: "bytes[]",
      },
    ],
    name: "trade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tradeTracker",
    outputs: [
      {
        internalType: "bool",
        name: "isExist",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum Types.Direction",
        name: "direction",
        type: "uint8",
      },
      {
        internalType: "int64",
        name: "startPrice",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "markPrice",
        type: "int64",
      },
      {
        internalType: "enum Types.Status",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "expireTime",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "market",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTradeTracker",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405261012c600760006101000a81548163ffffffff021916908363ffffffff1602179055503480156200003457600080fd5b50604051620032e2380380620032e283398181016040528101906200005a919062000197565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001de565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200015f8262000132565b9050919050565b620001718162000152565b81146200017d57600080fd5b50565b600081519050620001918162000166565b92915050565b60008060408385031215620001b157620001b06200012d565b5b6000620001c18582860162000180565b9250506020620001d48582860162000180565b9150509250929050565b6130f480620001ee6000396000f3fe6080604052600436106100a75760003560e01c80638c8a8aa2116100645780638c8a8aa2146101cf5780638da5cb5b1461020c5780639cf45394146102375780639f7f651314610260578063efbda66114610289578063fd7e0940146102c6576100a7565b806306e3de85146100ac578063234c615d146100e95780632ad0a383146101195780632db957e814610144578063379607f51461018a57806384296797146101b3575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190611d8d565b6102ef565b6040516100e09190611ddc565b60405180910390f35b61010360048036038101906100fe9190611fd6565b610320565b6040516101109190611ddc565b60405180910390f35b34801561012557600080fd5b5061012e6108f5565b60405161013b9190611ddc565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906120a1565b6109d3565b6040516101819a99989796959493929190612252565b60405180910390f35b34801561019657600080fd5b506101b160048036038101906101ac91906120a1565b610b10565b005b6101cd60048036038101906101c891906122f5565b610dd7565b005b3480156101db57600080fd5b506101f660048036038101906101f19190612355565b6114c4565b60405161020391906125c2565b60405180910390f35b34801561021857600080fd5b50610221611833565b60405161022e91906125e4565b60405180910390f35b34801561024357600080fd5b5061025e600480360381019061025991906125ff565b611859565b005b34801561026c57600080fd5b5061028760048036038101906102829190612355565b6118d8565b005b34801561029557600080fd5b506102b060048036038101906102ab91906125ff565b611976565b6040516102bd9190612661565b60405180910390f35b3480156102d257600080fd5b506102ed60048036038101906102e891906126a8565b6119a4565b005b6005602052816000526040600020818154811061030b57600080fd5b90600052602060002001600091509150505481565b600061032a611a25565b86600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b815260040161038691906125e4565b602060405180830381865afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190612719565b10156103d257600080fd5b600760009054906101000a900463ffffffff1663ffffffff168510156103f757600080fd5b60018660ff16111561040857600080fd5b60006104126108f5565b90508088111561042157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8a308b6040518463ffffffff1660e01b815260040161048093929190612746565b6020604051808303816000875af115801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c391906127a9565b506104ce8484611a6b565b6000600a866040516104e09190612812565b90815260200160405180910390205490506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166331d98b3f836040518263ffffffff1660e01b815260040161054e9190612661565b608060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f919061294b565b9050600560008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600654908060018154018082558091505060019003906000526020600020016000909190919091505560405180610140016040528060011515815260200160065481526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a60ff16600181111561064e5761064d6120f8565b5b60018111156106605761065f6120f8565b5b8152602001826000015160070b8152602001600060070b8152602001600060038111156106905761068f6120f8565b5b60038111156106a2576106a16120f8565b5b815260200189426106b391906129a7565b81526020018881525060046000600654815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690836001811115610777576107766120f8565b5b021790555060a08201518160040160016101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555060c08201518160040160096101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555060e08201518160040160116101000a81548160ff0219169083600381111561080b5761080a6120f8565b5b021790555061010082015181600501556101208201518160060190816108319190612be7565b5090505060028a6108429190612cb9565b6008600082825461085391906129a7565b925050819055508a73ffffffffffffffffffffffffffffffffffffffff166006547f432e48d1692f899901ed53f480074130cf2c779f58c3520bcd00ad7a75413db68c8c60ff1660018111156108ac576108ab6120f8565b5b6040516108ba929190612cfb565b60405180910390a3600660008154809291906108d590612d24565b919050555060065493505050506108ea611ba2565b979650505050505050565b60006002600854600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161097991906125e4565b602060405180830381865afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba9190612719565b6109c49190612d6c565b6109ce9190612dcf565b905090565b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900460070b908060040160099054906101000a900460070b908060040160119054906101000a900460ff1690806005015490806006018054610a8d90612a0a565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab990612a0a565b8015610b065780601f10610adb57610100808354040283529160200191610b06565b820191906000526020600020905b815481529060010190602001808311610ae957829003601f168201915b505050505090508a565b610b18611a25565b806004600082815260200190815260200160002060000160009054906101000a900460ff16610b4657600080fd5b60026003811115610b5a57610b596120f8565b5b6004600084815260200190815260200160002060040160119054906101000a900460ff166003811115610b9057610b8f6120f8565b5b14610b9a57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6004600085815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026004600087815260200190815260200160002060030154610c329190612cb9565b6040518363ffffffff1660e01b8152600401610c4f929190612e00565b6020604051808303816000875af1158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9291906127a9565b5060026004600084815260200190815260200160002060030154610cb69190612cb9565b600854610cc39190612d6c565b600881905550600380811115610cdc57610cdb6120f8565b5b6004600084815260200190815260200160002060040160116101000a81548160ff02191690836003811115610d1457610d136120f8565b5b0217905550610d24826003611bac565b6004600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16827f4ec90e965519d92681267467f775ada5bd214aa92c0dc93d90a5e880ce9ed02660026004600087815260200190815260200160002060030154610db69190612cb9565b604051610dc39190611ddc565b60405180910390a350610dd4611ba2565b50565b610ddf611a25565b826004600082815260200190815260200160002060000160009054906101000a900460ff16610e0d57600080fd5b60006003811115610e2157610e206120f8565b5b6004600086815260200190815260200160002060040160119054906101000a900460ff166003811115610e5757610e566120f8565b5b148015610e7a575060046000858152602001908152602001600020600501544210155b610e8357600080fd5b610e8d8383611a6b565b6000600a60046000878152602001908152602001600020600601604051610eb49190612eac565b90815260200160405180910390205490506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166331d98b3f836040518263ffffffff1660e01b8152600401610f229190612661565b608060405180830381865afa158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f63919061294b565b905080600001516004600088815260200190815260200160002060040160096101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff16021790555060006001811115610fbd57610fbc6120f8565b5b6004600088815260200190815260200160002060040160009054906101000a900460ff166001811115610ff357610ff26120f8565b5b03611258576004600087815260200190815260200160002060040160019054906101000a900460070b60070b816000015160070b13156110e257611038866002611bac565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636f91f8506004600089815260200190815260200160002060030154306040518363ffffffff1660e01b81526004016110ab929190612ec3565b600060405180830381600087803b1580156110c557600080fd5b505af11580156110d9573d6000803e3d6000fd5b50505050611253565b600160038111156110f6576110f56120f8565b5b6004600088815260200190815260200160002060040160116101000a81548160ff0219169083600381111561112e5761112d6120f8565b5b021790555061113e866001611bac565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008a8152602001908152602001600020600301546040518363ffffffff1660e01b81526004016111d3929190612e00565b6020604051808303816000875af11580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121691906127a9565b506002600460008881526020019081526020016000206003015461123a9190612cb9565b6008600082825461124b9190612d6c565b925050819055505b6114b4565b6004600087815260200190815260200160002060040160019054906101000a900460070b60070b816000015160070b121561134257611298866002611bac565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636f91f8506004600089815260200190815260200160002060030154306040518363ffffffff1660e01b815260040161130b929190612ec3565b600060405180830381600087803b15801561132557600080fd5b505af1158015611339573d6000803e3d6000fd5b505050506114b3565b60016003811115611356576113556120f8565b5b6004600088815260200190815260200160002060040160116101000a81548160ff0219169083600381111561138e5761138d6120f8565b5b021790555061139e866001611bac565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008a8152602001908152602001600020600301546040518363ffffffff1660e01b8152600401611433929190612e00565b6020604051808303816000875af1158015611452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147691906127a9565b506002600460008881526020019081526020016000206003015461149a9190612cb9565b600860008282546114ab9190612d6c565b925050819055505b5b5050506114bf611ba2565b505050565b60606000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905067ffffffffffffffff81111561152457611523611e4b565b5b60405190808252806020026020018201604052801561155d57816020015b61154a611c50565b8152602001906001900390816115425790505b50905060005b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156118295760046000600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061160257611601612eec565b5b90600052602060002001548152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff1660018111156116d1576116d06120f8565b5b60018111156116e3576116e26120f8565b5b81526020016004820160019054906101000a900460070b60070b60070b81526020016004820160099054906101000a900460070b60070b60070b81526020016004820160119054906101000a900460ff166003811115611746576117456120f8565b5b6003811115611758576117576120f8565b5b81526020016005820154815260200160068201805461177690612a0a565b80601f01602080910402602001604051908101604052809291908181526020018280546117a290612a0a565b80156117ef5780601f106117c4576101008083540402835291602001916117ef565b820191906000526020600020905b8154815290600101906020018083116117d257829003601f168201915b50505050508152505082828151811061180b5761180a612eec565b5b6020026020010181905250808061182190612d24565b915050611563565b5080915050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118b357600080fd5b600a816040516118c39190612812565b90815260200160405180910390206000905550565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461193257600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119fe57600080fd5b80600a83604051611a0f9190612812565b9081526020016040518091039020819055505050565b600260005403611a61576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d47eed4584846040518363ffffffff1660e01b8152600401611aca92919061307f565b602060405180830381865afa158015611ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0b9190612719565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ef9e5e288285856040518463ffffffff1660e01b8152600401611b6b92919061307f565b6000604051808303818588803b158015611b8457600080fd5b505af1158015611b98573d6000803e3d6000fd5b5050505050505050565b6001600081905550565b8060ff166003811115611bc257611bc16120f8565b5b6004600084815260200190815260200160002060040160116101000a81548160ff02191690836003811115611bfa57611bf96120f8565b5b0217905550817f6c6e8659bf6f6891492500fd2036853476c6268915133fbe0e17ead05b9f98ba8260ff166003811115611c3757611c366120f8565b5b604051611c4491906130a3565b60405180910390a25050565b60405180610140016040528060001515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160006001811115611ca457611ca36120f8565b5b8152602001600060070b8152602001600060070b815260200160006003811115611cd157611cd06120f8565b5b815260200160008152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d2482611cf9565b9050919050565b611d3481611d19565b8114611d3f57600080fd5b50565b600081359050611d5181611d2b565b92915050565b6000819050919050565b611d6a81611d57565b8114611d7557600080fd5b50565b600081359050611d8781611d61565b92915050565b60008060408385031215611da457611da3611cef565b5b6000611db285828601611d42565b9250506020611dc385828601611d78565b9150509250929050565b611dd681611d57565b82525050565b6000602082019050611df16000830184611dcd565b92915050565b600060ff82169050919050565b611e0d81611df7565b8114611e1857600080fd5b50565b600081359050611e2a81611e04565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e8382611e3a565b810181811067ffffffffffffffff82111715611ea257611ea1611e4b565b5b80604052505050565b6000611eb5611ce5565b9050611ec18282611e7a565b919050565b600067ffffffffffffffff821115611ee157611ee0611e4b565b5b611eea82611e3a565b9050602081019050919050565b82818337600083830152505050565b6000611f19611f1484611ec6565b611eab565b905082815260208101848484011115611f3557611f34611e35565b5b611f40848285611ef7565b509392505050565b600082601f830112611f5d57611f5c611e30565b5b8135611f6d848260208601611f06565b91505092915050565b600080fd5b600080fd5b60008083601f840112611f9657611f95611e30565b5b8235905067ffffffffffffffff811115611fb357611fb2611f76565b5b602083019150836020820283011115611fcf57611fce611f7b565b5b9250929050565b600080600080600080600060c0888a031215611ff557611ff4611cef565b5b60006120038a828b01611d42565b97505060206120148a828b01611d78565b96505060406120258a828b01611e1b565b95505060606120368a828b01611d78565b945050608088013567ffffffffffffffff81111561205757612056611cf4565b5b6120638a828b01611f48565b93505060a088013567ffffffffffffffff81111561208457612083611cf4565b5b6120908a828b01611f80565b925092505092959891949750929550565b6000602082840312156120b7576120b6611cef565b5b60006120c584828501611d78565b91505092915050565b60008115159050919050565b6120e3816120ce565b82525050565b6120f281611d19565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110612138576121376120f8565b5b50565b600081905061214982612127565b919050565b60006121598261213b565b9050919050565b6121698161214e565b82525050565b60008160070b9050919050565b6121858161216f565b82525050565b6004811061219c5761219b6120f8565b5b50565b60008190506121ad8261218b565b919050565b60006121bd8261219f565b9050919050565b6121cd816121b2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561220d5780820151818401526020810190506121f2565b60008484015250505050565b6000612224826121d3565b61222e81856121de565b935061223e8185602086016121ef565b61224781611e3a565b840191505092915050565b600061014082019050612268600083018d6120da565b612275602083018c611dcd565b612282604083018b6120e9565b61228f606083018a611dcd565b61229c6080830189612160565b6122a960a083018861217c565b6122b660c083018761217c565b6122c360e08301866121c4565b6122d1610100830185611dcd565b8181036101208301526122e48184612219565b90509b9a5050505050505050505050565b60008060006040848603121561230e5761230d611cef565b5b600061231c86828701611d78565b935050602084013567ffffffffffffffff81111561233d5761233c611cf4565b5b61234986828701611f80565b92509250509250925092565b60006020828403121561236b5761236a611cef565b5b600061237984828501611d42565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6123b7816120ce565b82525050565b6123c681611d57565b82525050565b6123d581611d19565b82525050565b6123e48161214e565b82525050565b6123f38161216f565b82525050565b612402816121b2565b82525050565b600082825260208201905092915050565b6000612424826121d3565b61242e8185612408565b935061243e8185602086016121ef565b61244781611e3a565b840191505092915050565b60006101408301600083015161246b60008601826123ae565b50602083015161247e60208601826123bd565b50604083015161249160408601826123cc565b5060608301516124a460608601826123bd565b5060808301516124b760808601826123db565b5060a08301516124ca60a08601826123ea565b5060c08301516124dd60c08601826123ea565b5060e08301516124f060e08601826123f9565b506101008301516125056101008601826123bd565b5061012083015184820361012086015261251f8282612419565b9150508091505092915050565b60006125388383612452565b905092915050565b6000602082019050919050565b600061255882612382565b612562818561238d565b9350836020820285016125748561239e565b8060005b858110156125b05784840389528151612591858261252c565b945061259c83612540565b925060208a01995050600181019050612578565b50829750879550505050505092915050565b600060208201905081810360008301526125dc818461254d565b905092915050565b60006020820190506125f960008301846120e9565b92915050565b60006020828403121561261557612614611cef565b5b600082013567ffffffffffffffff81111561263357612632611cf4565b5b61263f84828501611f48565b91505092915050565b6000819050919050565b61265b81612648565b82525050565b60006020820190506126766000830184612652565b92915050565b61268581612648565b811461269057600080fd5b50565b6000813590506126a28161267c565b92915050565b600080604083850312156126bf576126be611cef565b5b600083013567ffffffffffffffff8111156126dd576126dc611cf4565b5b6126e985828601611f48565b92505060206126fa85828601612693565b9150509250929050565b60008151905061271381611d61565b92915050565b60006020828403121561272f5761272e611cef565b5b600061273d84828501612704565b91505092915050565b600060608201905061275b60008301866120e9565b61276860208301856120e9565b6127756040830184611dcd565b949350505050565b612786816120ce565b811461279157600080fd5b50565b6000815190506127a38161277d565b92915050565b6000602082840312156127bf576127be611cef565b5b60006127cd84828501612794565b91505092915050565b600081905092915050565b60006127ec826121d3565b6127f681856127d6565b93506128068185602086016121ef565b80840191505092915050565b600061281e82846127e1565b915081905092915050565b600080fd5b6128378161216f565b811461284257600080fd5b50565b6000815190506128548161282e565b92915050565b600067ffffffffffffffff82169050919050565b6128778161285a565b811461288257600080fd5b50565b6000815190506128948161286e565b92915050565b60008160030b9050919050565b6128b08161289a565b81146128bb57600080fd5b50565b6000815190506128cd816128a7565b92915050565b6000608082840312156128e9576128e8612829565b5b6128f36080611eab565b9050600061290384828501612845565b600083015250602061291784828501612885565b602083015250604061292b848285016128be565b604083015250606061293f84828501612704565b60608301525092915050565b60006080828403121561296157612960611cef565b5b600061296f848285016128d3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006129b282611d57565b91506129bd83611d57565b92508282019050808211156129d5576129d4612978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a2257607f821691505b602082108103612a3557612a346129db565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612a9d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a60565b612aa78683612a60565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612ae4612adf612ada84611d57565b612abf565b611d57565b9050919050565b6000819050919050565b612afe83612ac9565b612b12612b0a82612aeb565b848454612a6d565b825550505050565b600090565b612b27612b1a565b612b32818484612af5565b505050565b5b81811015612b5657612b4b600082612b1f565b600181019050612b38565b5050565b601f821115612b9b57612b6c81612a3b565b612b7584612a50565b81016020851015612b84578190505b612b98612b9085612a50565b830182612b37565b50505b505050565b600082821c905092915050565b6000612bbe60001984600802612ba0565b1980831691505092915050565b6000612bd78383612bad565b9150826002028217905092915050565b612bf0826121d3565b67ffffffffffffffff811115612c0957612c08611e4b565b5b612c138254612a0a565b612c1e828285612b5a565b600060209050601f831160018114612c515760008415612c3f578287015190505b612c498582612bcb565b865550612cb1565b601f198416612c5f86612a3b565b60005b82811015612c8757848901518255600182019150602085019450602081019050612c62565b86831015612ca45784890151612ca0601f891682612bad565b8355505b6001600288020188555050505b505050505050565b6000612cc482611d57565b9150612ccf83611d57565b9250828202612cdd81611d57565b91508282048414831517612cf457612cf3612978565b5b5092915050565b6000604082019050612d106000830185611dcd565b612d1d6020830184612160565b9392505050565b6000612d2f82611d57565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d6157612d60612978565b5b600182019050919050565b6000612d7782611d57565b9150612d8283611d57565b9250828203905081811115612d9a57612d99612978565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612dda82611d57565b9150612de583611d57565b925082612df557612df4612da0565b5b828204905092915050565b6000604082019050612e1560008301856120e9565b612e226020830184611dcd565b9392505050565b60008154612e3681612a0a565b612e4081866127d6565b94506001821660008114612e5b5760018114612e7057612ea3565b60ff1983168652811515820286019350612ea3565b612e7985612a3b565b60005b83811015612e9b57815481890152600182019150602081019050612e7c565b838801955050505b50505092915050565b6000612eb88284612e29565b915081905092915050565b6000604082019050612ed86000830185611dcd565b612ee560208301846120e9565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b6000819050919050565b600082825260208201905092915050565b6000612f538385612f36565b9350612f60838584611ef7565b612f6983611e3a565b840190509392505050565b6000612f81848484612f47565b90509392505050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112612fb657612fb5612f94565b5b83810192508235915060208301925067ffffffffffffffff821115612fde57612fdd612f8a565b5b600182023603831315612ff457612ff3612f8f565b5b509250929050565b6000602082019050919050565b60006130158385612f1b565b93508360208402850161302784612f2c565b8060005b8781101561306d5784840389526130428284612f99565b61304d868284612f74565b955061305884612ffc565b935060208b019a50505060018101905061302b565b50829750879450505050509392505050565b6000602082019050818103600083015261309a818486613009565b90509392505050565b60006020820190506130b860008301846121c4565b9291505056fea2646970667358221220dd66b611096cdc6dc30bcd73403927cc11a7f19cf62d4d4bcf57ab721c7c39b464736f6c63430008140033";

type BiopsHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BiopsHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BiopsHub__factory extends ContractFactory {
  constructor(...args: BiopsHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    _pyth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, _pyth, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    _pyth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, _pyth, overrides || {}) as Promise<
      BiopsHub & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BiopsHub__factory {
    return super.connect(runner) as BiopsHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BiopsHubInterface {
    return new Interface(_abi) as BiopsHubInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BiopsHub {
    return new Contract(address, _abi, runner) as unknown as BiopsHub;
  }
}
